.button--base(){
	// RESETS //
	-webkit-appearance: none;
	border: initial;
	background: initial;
	margin: 0;
	padding: 0;
	outline: 0;
	cursor: pointer;	
	color: inherit;
	text-decoration: unset;
	
	.text_Shadow();
	color: @fgStrong_Color;
	
	display: inline-flex;
	align-items: center;
	
	.transition(color);

	position: relative;
	// &::before, 
	&::after{
		content: '';
		.absolute(-@s4);
		z-index: -1;
		border-radius: @border_Radius;
		border: @border_Size solid transparent;
		background-color: transparent;
		.transition(opacity transform background-position background-color);
	}

	&::after{
		background-image: linear-gradient(-45deg, @accentDeep_Color, @accentPrimary_Color, transparent, transparent);
		@bgSize: (4 - 1) * 100%;
		background-size: @bgSize @bgSize;
		background-position: 0% 0%;
	}

	// normal - nothing, fill or outline
	// hover - gradient, larger scale
	// active - darker gradient, smaller scale
	// focus - outline

	&:hover{
		color: @fgStrong_Color;
		transition-duration: @hover_Duration;
		&::after{
			@buttonHover_Scale: unit((@button_Size + @s4) / @button_Size);
			transform: scale(@buttonHover_Scale);
			background-position: 50% 50%;
			background-color: @accentBright_Color;
			transition-duration: @hover_Duration;
		}
	}

	&:active{
		color: @fgOnColor_Color;
		transition-duration: @active_Duration;
		&::after{
			@buttonActive_Scale: unit((@button_Size - @s2) / @button_Size);
			transform: scale(@buttonActive_Scale);
			background-position: 100% 100%;
			background-color: @accentBright_Color;
			transition-duration: @active_Duration;
		}
	}
}

.button--fill(){
	&::after{
		background-color: @bgPrimary_Color;
	}
}
.button--fill-light(){
	&::after{
		background-color: fade(@bgPrimary_Color, @fgWeak_Opacity * 100%);
	}
}

.button--outline(){
	&::after{
		border-color: @fgWeaker_Color;
	}
}

.button--emphasis(){
	&::after{
		background-color: @bgOverlay_Color;
	}
}

.button--large(){
	height: @button_Size;
	padding: 0 @s16;
	// display: flex;	

	// &::before, 
	&::after{
		.absolute(0);
	}
}

.button--in-list(){
	
	// RESET
	// &::before, 
	&::after{
		content: none;
	}

	// combine this with the other button above
	// border: @border_Size solid transparent;
	background-color: transparent;
	.transition(opacity transform background-position background-color);

	background-image: linear-gradient(-45deg, @accentDeep_Color, @accentPrimary_Color, transparent, transparent);
	@bgSize: (4 - 1) * 100%;
	background-size: @bgSize @bgSize;
	background-position: 0% 0%;

	&:hover{
		background-position: 50% 50%;
		background-color: @accentBright_Color;
		transition-duration: @hover_Duration;
	}
	&:active{
		background-position: 100% 100%;
		background-color: @accentBright_Color;
		transition-duration: @active_Duration;
	}


}




// CLASSES //

.button--icon{ // button that is only an icon
	width:  @buttonLg_Size;
	height: @buttonLg_Size;
	&:after{
		border-radius: @buttonLg_Size;
	}
	padding: 0;
	justify-content: center;
}
.button__icon{ // an icon that is in a button
	margin-left: 1em;
}

a{
	.button--base();
}

button, 
[type="button"], 
[type="reset"], 
[type="submit"],
.button{
	.button--base();
	.button--large();
	.meta_Type();
}

.button--fill{.button--fill();}
.button--fill-light{.button--fill-light();}
.button--outline{.button--outline();}
.button--emphasis{.button--emphasis();}
.button--large{.button--large();}
.button--icon{.button--icon();}
.button--in-list{.button--in-list();}

.button--custom{
	// removes background changes
	// &::before, 
	&::after{
		content: none;
	}
}

.button--current{
	&, &:hover, &:active{
		color: @fgWeak_Color;
	}
	&::after{
		content: none;
		// TODO: dot underneath?
	}
}