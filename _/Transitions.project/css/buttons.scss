// buttons.scss

/*  

How to style svg with css - http://tutorials.jenkov.com/svg/stroke.html

fill				Sets fill color of the shape.
fill-opacity		Sets fill opacity of the shape.
fill-rule			Sets fill rule of the shape.
marker				Sets marker used along the lines (edges) of this shape.
marker-start		Sets start marker used along the lines (edges) of this shape.
marker-mid			Sets mid marker used along the lines (edges) of this shape.
marker-end			Sets end marker used along the lines (edges) of this shape.
stroke				Sets the stroke (line) color used to draw the outline of this shape.
stroke-dasharray	Sets the stroke (line) dashing used to draw the outline of this shape.
stroke-dashoffset	Sets the stroke (line) dash offset used to draw the outline of this shape.
stroke-linecap	 	Sets the stroke (line) line cap used to draw the outline of this shape. Valid values are round, butt and square.
stroke-linejoin		Sets the miter joint type - round, miter, or bevel
stroke-miterlimit	Sets the stroke (line) miter limit used to draw the outline of this shape.
stroke-opacity		Sets the stroke (line) opacity used to draw the outline of this shape.
stroke-width		Sets the stroke (line) width used to draw the outline of this shape.
text-rendering		Sets the text-rendering used to draw the outline of this shape.

*/


// --------------------------------------------------------------- Light Color Vars

$colorIconBorder: 				$colorBlack7;
$colorIconCenter: 				$colorBG;
$colorIconCenterTransparent: 	rgba($colorIconCenter,0.6);
$colorIconSVG: 					$colorIconBorder;

$colorIconBorderHover: 			$colorBlack9;
$colorIconCenterHover: 			$colorIconBorderHover;
$colorIconSVGHover: 			$colorBG;

$colorIconBorderActive: 		$colorAccent;
$colorIconCenterActive: 		$colorIconBorderActive;
$colorIconSVGActive: 			$colorBG;

$colorIconBorderCurrent: 		$colorBlack6;
$colorIconCenterCurrent: 		$colorIconBorderCurrent;
$colorIconSVGCurrent: 			$colorBG;

// --------------------------------------------------------------- Dark Color Vars
$colorDarkText:					$colorBlack3;
$colorDarkIconBorder: 			$colorDarkText;
$colorDarkIconCenter: 			rgba(white,0);
$colorDarkIconSVG: 				$colorDarkText;

$colorDarkTextHover:			rgba(white,1);
$colorDarkIconBorderHover: 		$colorDarkTextHover;
$colorDarkIconCenterHover: 		$colorDarkTextHover;
$colorDarkIconSVGHover: 		$colorBlack9;

$colorDarkTextActive:			$colorAccent;
$colorDarkIconBorderActive: 	$colorDarkTextActive;
$colorDarkIconCenterActive: 	$colorDarkTextActive;
$colorDarkIconSVGActive: 		$colorBlack9;

$colorDarkTextCurrent:			$colorBlack6;
$colorDarkIconBorderCurrent:	$colorDarkTextCurrent;
$colorDarkIconCenterCurrent:	$colorDarkTextCurrent;
$colorDarkIconSVGCurrent: 		$colorBlack9;


use{position: relative;}

// --------------------------------------------------------------- ICON CAPSULE & COLORS LIGHT
.icon-capsule{
	&::before{
		@include transition();
		content: '';
		background: $colorIconCenter;
		border-radius: 50%;
		position: absolute;
		border: $buttonBorderSize solid $colorIconBorder;
		cursor: pointer;
	}
	.icon{
		color: $colorIconSVG;
	}
	&.info-toggle::before{
		background: $colorIconCenterTransparent;
	}
	&:hover{
		.icon{
			color: $colorIconSVGHover;
		}
		&::before{
			background: $colorIconCenterHover;
			border-color: $colorIconBorderHover;
			@include transform(scale(1.1));
		}
	}
	&:active{
		.icon{
			color: $colorIconSVGActive;
		}
		&::before{
			background: $colorIconCenterActive;
			border-color: $colorIconBorderActive;
			@include transform(scale(0.95));
			@include transition(all, $activeTiming);
		}
		&::after{
			color: $colorLinkHover;
		}
	}
}

// --------------------------------------------------------------- ICON COLORS DARK
#menu-toggle.menu-is-active,
.dark
{	
	&::before{
		@include transition();
		background: $colorDarkIconCenter;
		border: $buttonBorderSize solid $colorDarkIconBorder;
	}
	.icon{
		color: $colorDarkIconSVG;
	}
	&:hover
	,.nav a:hover &
	,#search-form:hover &
	,.search-term:focus + button &
	{
		.icon{
			color: $colorDarkIconSVGHover;
		}
		&::before{
			background: $colorDarkIconCenterHover;
			border-color: $colorDarkIconBorderHover;
		}
	}
	&:active
	,.nav a:active &
	// ,#search-form:active & // click to type looks like a click to submit...
	{
		.icon{
			color: $colorDarkIconSVGActive;
		}
		&::before{
			background: $colorDarkIconCenterActive;
			border-color: $colorDarkIconBorderActive;
		}
	}
}

// --------------------------------------------------------------- ICON CURRENT
.current, .current-menu-item{
	.icon {
		color: $colorIconSVGCurrent;
	}
	.dark .icon{
		color: $colorDarkIconSVGCurrent;
	}
	.icon-capsule, .icon-nav{
		&::before
		,&:hover::before
		,&:active::before
		{
			@include transform(scale(1));
			background: $colorIconCenterCurrent;
			border-color: $colorIconBorderCurrent;
		}
	}
}

// --------------------------------------------------------------- GENERAL SVG ICON STYLES
.icon{
	position: absolute;
	color: black;
	stroke: currentColor;
	stroke-width: 2;
	stroke-linejoin: round;
	stroke-miterlimit: 10;
	fill: none;
	cursor: pointer;
}
.fill .icon{
	fill: currentColor;
	stroke: none;
}

// --------------------------------------------------------------- RESIZE ICON CAPSULE AND SVG
@mixin iconResize($sideMargin, $buttonSize, $buttonIconSize, $buttonNavSize, $buttonNavIconSize ){
	.icon{
		height:	$buttonIconSize;
		width:	$buttonIconSize;
		top: ($sideMargin - $buttonIconSize) / 2;
		left: ($sideMargin - $buttonIconSize) / 2;
		line-height: $buttonIconSize;
	}
	.social .icon{
		$buttonFillIconSize: $buttonIconSize *1.25;
		height:	$buttonFillIconSize;
		width:	$buttonFillIconSize;
		top: ($sideMargin - $buttonFillIconSize) / 2;
		left: ($sideMargin - $buttonFillIconSize) / 2;
	}
	.icon-capsule
	{
		height:	$sideMargin;
		width:	$sideMargin;
		&::before{
			height:	$buttonSize;
			width:	$buttonSize;
			top: ($sideMargin - ($buttonSize + ($buttonBorderSize * 2))) / 2;
			left: ($sideMargin - ($buttonSize + ($buttonBorderSize * 2))) / 2;
		}
	}
	.icon-nav{
		height:	$sideMargin;
		width:	$sideMargin;
		&::before{
			height:	$buttonNavSize;
			width:	$buttonNavSize;
			top: ($sideMargin - ($buttonNavSize + ($buttonBorderSize * 2))) / 2;
			left: ($sideMargin - ($buttonNavSize + ($buttonBorderSize * 2))) / 2;
		}
		.icon{
			height:	$buttonNavIconSize;
			width:	$buttonNavIconSize;
			top: ($sideMargin - $buttonNavIconSize) / 2;
			left: ($sideMargin - $buttonNavIconSize) / 2;
		}
	}

}
@include screenSize(0,S) { 
	@include iconResize($sideMarginsS, $buttonSizeS, $buttonIconSizeS, $buttonNavSizeS, $buttonNavIconSizeS);
}
@include screenSize(S,L) { 
	@include iconResize($sideMarginsM, $buttonSizeM, $buttonIconSizeM, $buttonNavSizeM, $buttonNavIconSizeM);
}
@include screenSize(L) { 
	@include iconResize($sideMarginsL, $buttonSizeL, $buttonIconSizeL, $buttonNavSizeL, $buttonNavIconSizeL);
}


.icon-close,.icon-menu,.icon-info{
	@include transition();
}
// --------------------------------------------------------------- MENU TOGGLE
#menu-toggle{
	z-index: index($z-of, '#menu-toggle');
	// z-index: 100;
	position: fixed;
	top:0;
	left:0;
	.icon-close{
		opacity: 0;
	}
	&.menu-is-active{
		.icon-close,.icon-menu{
			@include transform(rotate(360deg));
		}
		.icon-close{
			opacity: 1;
		}
		.icon-menu{
			opacity: 0;
		}
	}
}

// --------------------------------------------------------------- INFO TOGGLE
@include screenSize(0,L) { 
	.info-toggle{display: visible;}
}
@include screenSize(L) { 
	.info-toggle{display: none;}
}
.info-toggle{
	z-index: index($z-of, '.info-toggle');
	position: absolute;
	bottom:0;
	right:0;
	.icon-close{
		opacity: 0;
	}
}
.info-is-active{
	.icon-close{
		@include transform(rotate(360deg));
		opacity: 1;
	}
	.icon-info{
		opacity: 0;
	}
}

// --------------------------------------------------------------- TALL NAV ARROWS
.nav-arrow-tall{
	position: relative;
	top:50%;
	width:20px; 
	height:45px;
	stroke:#000;
	stroke-width:5;
	stroke-linejoin:round;
	stroke-miterlimit:10;
	fill:none;
	@include transition();
}

// --------------------------------------------------------------- PAGE NUMBER BUTTONS
.icon-number{
	@include fontNumbers;
	height: auto;
	width: auto;
	margin: 0;
	-webkit-font-smoothing: antialiased;
}
